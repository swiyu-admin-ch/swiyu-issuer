# SPDX-FileCopyrightText: 2025 Swiss Confederation
#
# SPDX-License-Identifier: MIT

spring:
  docker:
    compose:
      enabled: true
      file: compose.yaml
  datasource:
    url: "jdbc:postgresql://localhost:5434/issuer_db"
    username: "issuer_mgmt_user"
    password: "secret"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate

logging:
  level:
    ch.admin.bj.swiyu: DEBUG
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: WARN

springdoc:
  show-actuator: true

application:
  external-url: "http://localhost:8080/"
  offer-validity: 2592000 # 60 * 60 * 24 * 30 => 30 days;
  deferred-offer-validity-seconds: 864000 # 60 * 60 * 24 * 10 => 10 days
  issuer-id: "did:example:123456789"
  token-ttl: 600
  #  openid-file: "file:///data/example_openid.json"
  openid-file: "classpath:example_openid.json"
  metadata-file: "classpath:example_issuer_metadata.json"
  # vct metadata files. They key will become part of the url
  vct-metadata-files:
    my-vct-v01: "classpath:example_vct_metadata.json"

  overlays-capture-architecture-metadata-files:
    my-overlay-v01: "classpath:example_oca.json"
  # json schema files, eg referenced in vct metadata. They key will become part of the url
  json-schema-metadata-files:
    my-schema-v01: "classpath:example_json_schema.json"

  status-list:
    private-key: "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIDqMm9PvL4vpyFboAwaeViQsH30CkaDcVtRniZPezFxpoAoGCCqGSM49\nAwEHoUQDQgAEQgjeqGSdu+2jq8+n78+6fXk2Yh22lQKBYCnu5FWPvKtat3wFEsQX\nqNHYgPXBxWmOBw5l2PE/gUDUJqGJSc1LuQ==\n-----END EC PRIVATE KEY-----"
    verification-method: "did:example:123456789#example-method"
  key:
    sdjwt:
      private-key: "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIAs0WyAxFdOvqYML8t2Zy0otWO93eXnR5X1fa09hI6mDoAoGCCqGSM49\nAwEHoUQDQgAEJCe2BrwmpvMHw/J+hx6dGKCtRtv+X5fk8NNCXSSHr9owdxOyIaz9\nplC4UblhP2d7rIi52L4LKqEhp6cliJ5xuw==\n-----END EC PRIVATE KEY-----\n"
      verification-method: "did:example:123456789#example-method"
  template-replacement:
    external-url: "http://localhost:8080"


swiyu:
  status-registry:
    api-url: "https://status-reg-api-r.trust-infra.swiyu.admin.ch"
    # internal api-keymanager token URL to not need the bootstrap-refresh-token
    token-url: "https://keymanager-npr-intra.api.admin.ch/keycloak/realms/APIGW/protocol/openid-connect/token"
    token-refresh-interval: "PT30S"
    # The following 3 properties need to be generated via Api Self Service account per developer
    # bootstrap-refresh-token: is not needed for BV internal deployments, if you need this you also need a different token-url
    customer-key: "customer-key"
    customer-secret: "customer-secret"
  business-partner-id: "0212063f-7bf6-4639-b4f2-4c482ee453cf"